<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ui_macro">
    <sys_ui_macro action="INSERT_OR_UPDATE">
        <active>true</active>
        <category>general</category>
        <description>Include this UI macro in a standard formatter to enable electronic signature in a standard form. The macro will save the e-signature image as an attachment to the current record, with a naming convension of "E-Signature_&lt;current.sys_id&gt;". If a file with that name is attached to the current record, the e-signature pad will be disabled when the form renders.</description>
        <media_type/>
        <name>e_sig_pad_for_formatter</name>
        <scoped_name/>
        <sys_class_name>sys_ui_macro</sys_class_name>
        <sys_created_by>dave.knight</sys_created_by>
        <sys_created_on>2016-06-29 01:57:19</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>051eb9ed1394a6002ea1b2566144b05f</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>e_sig_pad_for_formatter</sys_name>
        <sys_package display_value="E-Signature Pad for a Formatter" source="x_snc_e_sig_pad">f3edf96d1394a6002ea1b2566144b09f</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="E-Signature Pad for a Formatter">f3edf96d1394a6002ea1b2566144b09f</sys_scope>
        <sys_update_name>sys_ui_macro_051eb9ed1394a6002ea1b2566144b05f</sys_update_name>
        <sys_updated_by>dave.knight</sys_updated_by>
        <sys_updated_on>2016-06-29 02:02:49</sys_updated_on>
        <xml><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">

<g2:evaluate var="jvar_stamp">
    var gr = new GlideRecord('sys_ui_script'); 
	gr.orderByDesc('sys_updated_on'); 
	gr.query(); 
	gr.next(); 
	gr.getValue('sys_updated_on');
</g2:evaluate>

<g:requires name="x_snc_e_sig_pad.eSigPad.jsdbx" params="cache=$[jvar_stamp]" />

<span id="e-sig_on_file_message" style="display:none;"><h1>$[AMP]nbsp;$[AMP]nbsp;E-Signature On File</h1></span>

<table id="e-sig_table" style="display:none">
    <tr>
        <td width="10">
        </td>
        <td>
            <button type="button" id="sig_pad_save" style="width:50px; float:left; position:relative; top:4px;" onclick="saveSig();">Save</button>
            <button type="button" id="sig_pad_clear" style="width:50px; float:left; position:relative; top:4px;" onclick="clearSig();">Clear</button>
            <img style="margin: 6px 3px 6px 3px;display:none;float:left; position:relative; top:4px;" id="esig_please_wait" src="images/please_wait.gifx" alt="${gs.getMessage('Please Wait')}" />
        </td>
    </tr>
    <tr>
        <td>
            $[AMP]nbsp;
        </td>
    </tr>
    <tr>
        <td width="10">
        </td>
        <td>
            <canvas id="myCanvas" width="600" height="200" style="border:1px solid">
            </canvas>
        </td>
    </tr>
</table>


<script>
    // https://github.com/szimek/signature_pad

    var canvas = document.querySelector("canvas");
    var signaturePad = new SignaturePad(canvas, {
        backgroundColor: "rgb(249, 237, 169)"
    });

    signaturePad.off();

    /*
			function resizeCanvas() {
	          var ratio =  Math.max(window.devicePixelRatio || 1, 1);
	          canvas.width = canvas.offsetWidth * ratio;
	          canvas.height = canvas.offsetHeight * ratio;
	          canvas.getContext("2d").scale(ratio, ratio);
	          signaturePad.clear(); // otherwise isEmpty() might return incorrect value
	        }
	        window.addEventListener("resize", resizeCanvas);
	        resizeCanvas();
	        */

    function saveSig() {

        gel('esig_please_wait').style.display = "";


        var encoded_data = signaturePad.toDataURL("image/jpeg");

        var blob = dataURItoBlob(encoded_data);

        var p1 = "table_name=" + g_form.getTableName();
        var p2 = "table_sys_id=" + g_form.getUniqueValue();
        var p3 = "file_name=E-Signature_" + g_form.getUniqueValue();


        var restEndPoint = "api/now/v1/attachment/file?" +
            p1 + "$[AMP]" + p2 + "$[AMP]" + p3;


        var comm = new XMLHttpRequest();
        comm.open("post", restEndPoint, false); // false - synchronous!
        comm.setRequestHeader("Content-Type", "image/jpeg");
        comm.setRequestHeader('X-UserToken', window.g_ck); // session token
        comm.send(blob);
        if (comm.status !== 201) {
            gel('esig_please_wait').style.display = "none";
            alert("E-Signature save failed!");
        } else {
            location.reload();
        }
    };

    function clearSig() {
        signaturePad.clear();
    };

    function enableSigPad() {
        signaturePad.on();
        gel('e-sig_table').style.display = "block";
    };


    function dataURItoBlob(dataURI) {
        // convert base64/URLEncoded data component to raw binary data held in a string
        var byteString;
        if (dataURI.split(',')[0].indexOf('base64') >= 0)
            byteString = atob(dataURI.split(',')[1]);
        else
            byteString = unescape(dataURI.split(',')[1]);

        // separate out the mime component
        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];

        // write the bytes of the string to a typed array
        var ia = new Uint8Array(byteString.length);
        for (var i = 0; i &amp;lt; byteString.length; i++) {
            ia[i] = byteString.charCodeAt(i);
        };

        return new Blob([ia], {
            type: mimeString
        });
    }


    addLoadEvent(function() {

        var enable_pad = true;
        var myList = document.getElementsByTagName("a");

        if (myList) {
            for (var i = 0; i &amp;lt; myList.length; i++) {
                if (myList[i].innerHTML) {
                    if (myList[i].innerHTML.indexOf("E-Signature_") != -1) {
                        enable_pad = false;
                        break;
                    }
                }
            }
        }


        if (enable_pad) {
            enableSigPad();
        } else {
            var msg = gel('e-sig_on_file_message');
            if (msg) msg.style.display = 'block';
        }
    });
</script>
</j:jelly>]]></xml>
    </sys_ui_macro>
</record_update>
